name: ci

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

env:
  telegram_bot_url: ${{ secrets.TELEGRAM_BOT_URL }}
  telegram_chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
  telegram_parse_mode: ${{ secrets.TELEGRAM_PARSE_MODE }}
  commit_message: ${{ github.event.commits[0].message }}
  repository: ${{ github.repository }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/asp02-devops-puc:latest
  tests:
    name: Tests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Python tests
        uses: AppThreat/sast-scan-action@master
        with:
          type: 'python'
      - name: HTML tests
        uses: AppThreat/sast-scan-action@master
        with:
          type: 'html'
  deploy:
    name: Deploy
    needs: tests
    runs-on: macos-latest
    env:
      NGROK_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: Run establish a ngrok tunnel
        id: test
        uses: vmactions/ngrok-tunnel@v0.0.1
        with:
          protocol: http
          port: 5000
  notify:
    name: Chatbot notification
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Notify via telegram
        run: bash telegram_notification.sh
